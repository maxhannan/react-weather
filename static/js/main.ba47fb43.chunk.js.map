{"version":3,"sources":["Components/getWeather.js","Components/DailyForecast.js","Components/OneDayForecast.js","Components/WeeklyForecast.js","Components/Forecast.js","Components/Header.js","Components/App.js","index.js"],"names":["getWeather","search","a","apiKey","baseUrl","getName","nameData","coords","geometry","location","name","formatted_address","oneCallURL","lat","lng","fetch","mode","response","json","data","weatherFormatter","url","results","info","placeName","current","sevenDayForecast","daily","map","day","weekDay","getDay","dt","highC","toCelsius","temp","max","lowC","min","highF","toFahrenheit","lowF","descrip","weather","description","iconSrc","getIconURL","icon","time","timeStr","toLocaleTimeString","tempC","tempF","wind","wind_speed","windDir","wind_deg","sunrise","humidity","sevenDay","K","Math","floor","date","Date","iconId","large","DailyForecast","isCelsius","OneDayForecast","WeeklyForecast","weekForecast","weekday","uniqid","Forecast","useState","setisCelsius","onClick","Header","wSearch","searchVal","setSearchVal","onSubmit","e","preventDefault","type","value","onChange","target","App","setData","pending","setPending","error","setError","wdata","message","useEffect","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mOACaA,EAAU,uCAAG,WAAOC,GAAP,6BAAAC,EAAA,6DAElBC,EAAS,mCACTC,EAAU,uDAHQ,SAIDC,EAAQJ,GAJP,cAIlBK,EAJkB,OAMlBC,EAASD,EAASE,SAASC,SAC3BC,EAAOJ,EAASK,kBAEhBC,EATkB,UASFR,GATE,OASQG,EAAOM,IATf,gBAS0BN,EAAOO,IATjC,kBAS8CX,GAT9C,UAWDY,MAAMH,EAAY,CAAEI,KAAM,SAXzB,eAWlBC,EAXkB,iBAYLA,EAASC,OAZJ,eAYlBC,EAZkB,yBAcjBC,EAAiBD,EAAMT,IAdN,4CAAH,sDAiBjBL,EAAO,uCAAG,WAAOJ,GAAP,mBAAAC,EAAA,4DAEC,0CACC,6DACVmB,EAJQ,UAGE,8DAHF,OAIUpB,EAJV,gBAEC,2CAFD,SAMSc,MAAMM,EAAK,CAAEL,KAAM,SAN5B,cAMRC,EANQ,gBAOKA,EAASC,OAPd,cAORC,EAPQ,yBASNA,EAAKG,QAAQ,IATP,4CAAH,sDAYPF,EAAmB,SAACG,EAAMC,GAC9B,IAAMC,EAAUF,EAAKE,QAEfC,EAAmBH,EAAKI,MAAMC,KAAI,SAAAC,GAUtC,MATgB,CACdA,IAAKC,EAAQC,EAAOF,EAAIG,IAAID,UAC5BE,MAAOC,EAAUL,EAAIM,KAAKC,KAC1BC,KAAMH,EAAUL,EAAIM,KAAKG,KACzBC,MAAOC,EAAaX,EAAIM,KAAKC,KAC7BK,KAAMD,EAAaX,EAAIM,KAAKG,KAC5BI,QAASb,EAAIc,QAAQ,GAAGC,YACxBC,QAASC,EAAWjB,EAAIc,QAAQ,GAAGI,MAAM,OAsB7C,MAjBoB,CAClBpB,MAAO,CACLlB,SAAUe,EACVwB,KAAMjB,EAAON,EAAQO,IACrBiB,QAASlB,EAAON,EAAQO,IAAIkB,qBAC5BrB,IAAKC,EAAQC,EAAON,EAAQO,IAAID,UAChCoB,MAAOjB,EAAUT,EAAQU,MACzBiB,MAAOZ,EAAaf,EAAQU,MAC5BkB,KAAM5B,EAAQ6B,WACdC,QAAS9B,EAAQ+B,SACjBC,QAAS1B,EAAON,EAAQgC,SAASP,qBACjCQ,SAAUjC,EAAQiC,SAClBhB,QAASjB,EAAQkB,QAAQ,GAAGC,YAC5BC,QAASC,EAAWrB,EAAQkB,QAAQ,GAAGI,OAEzCY,SAAS,YAAKjC,KAMZI,EAAU,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OACrDI,EAAY,SAAC0B,GAAD,OAAOC,KAAKC,MAAMF,EAAI,SAClCpB,EAAe,SAACoB,GAAD,OAAOC,KAAKC,MAAM,IAAA5B,EAAU0B,GAAe,KAC1D7B,EAAS,SAACgC,GAAD,OAAU,IAAIC,KAAY,IAAPD,IAE5BjB,EAAa,SAACmB,GAA0B,IAAlBC,IAAiB,yDAO3C,MAJK,2CAAuCD,EADxCC,EACC,UAEA,Y,OCjEQC,EAXO,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,UAAW7C,EAAU,EAAVA,KAEjC,OACA,gCACE,6BAAKA,EAAKd,WACV,mCAAe,UAAT2D,EAAe7C,EAAK4B,MAAa5B,EAAK6B,cCKjCiB,EAXQ,SAAC,GAAsB,IAArBD,EAAoB,EAApBA,UAAWvC,EAAS,EAATA,IAClC,OACE,gCACE,6BAAKA,EAAIA,MACT,uCAAmB,UAATuC,EAAevC,EAAII,MAAaJ,EAAIU,UAE9C,sCAAkB,UAAT6B,EAAevC,EAAIQ,KAAYR,EAAIY,a,gBCSnC6B,EAbQ,SAAC,GAAiC,IAA/BF,EAA8B,EAA9BA,UAAWG,EAAmB,EAAnBA,aACnC,OACE,8BACGA,EAAa3C,KAAI,SAAA4C,GAAO,OACzB,cAAC,EAAD,CAEA3C,IAAO2C,EACPJ,UAAaA,GAFNK,aCWEC,EAfE,SAAC,GAAY,IAAXvD,EAAU,EAAVA,KAAU,EACOwD,oBAAS,GADhB,mBACpBP,EADoB,KACTQ,EADS,KAE3B,OACA,gCACE,wBAAQC,QAAU,kBAAMD,GAAcR,IAAtC,sBACA,cAAC,EAAD,CACAA,UAAaA,EACb7C,KAAQJ,EAAKQ,QACb,cAAC,EAAD,CACAyC,UAAaA,EACbG,aAAgBpD,EAAKwC,eCWVmB,EAtBA,SAAC,GAAe,IAAdC,EAAa,EAAbA,QAAa,EACMJ,mBAAS,IADf,mBACrBK,EADqB,KACVC,EADU,KAW5B,OACE,uBAAMC,SATa,SAACC,GACpBA,EAAEC,iBACe,KAAdJ,IACDD,EAAQC,GACRC,EAAa,MAKf,UACE,uBACAI,KAAK,OACLC,MAASN,EACTO,SAAY,SAACJ,GAAD,OAAOF,EAAaE,EAAEK,OAAOF,UACzC,uBAAOD,KAAK,SAASC,MAAQ,eCwBpBG,MArCf,WAAgB,IAAD,EACWd,mBAAS,MADpB,mBACNxD,EADM,KACAuE,EADA,OAEiBf,oBAAS,GAF1B,mBAENgB,EAFM,KAEGC,EAFH,OAGajB,mBAAS,MAHtB,mBAGNkB,EAHM,KAGCC,EAHD,KAKPnD,EAAO,uCAAG,WAAO1C,GAAP,eAAAC,EAAA,6DACd0F,GAAW,GACXE,EAAS,MAFK,kBAKE9F,EAAWC,GALb,OAKZ8F,EALY,8DAOZD,EAAS,KAAME,SACfJ,GAAW,GARC,uCAWdF,EAXc,UAWCK,EAXD,mCAadH,GAAW,GAbG,yDAAH,sDAsBb,OANAK,qBAAU,WACRtD,EAAQ,iBACR,IAKA,sBAAKuD,UAAU,MAAf,UACE,cAAC,EAAD,CAAQnB,QAAWpC,IAClBkD,GAAS,0DAA6BA,KACtCF,GAAW,6CACVA,IAAYE,GAAS,cAAC,EAAD,CAAU1E,KAAQA,QCjC/CgF,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ba47fb43.chunk.js","sourcesContent":["// Grabs Weather Data and return formatted info\nexport const getWeather = async (search) => {\n  // openWeather Key\n  const apiKey = '070d5b93cd86e7baa71b2a5bf2276467'\n  const baseUrl = 'https://api.openweathermap.org/data/2.5/onecall?lat='\n  const nameData = await getName(search)\n  \n  const coords = nameData.geometry.location\n  const name = nameData.formatted_address\n\n  const oneCallURL = `${baseUrl}${coords.lat}&lon=${coords.lng}&appid=${apiKey}`\n  \n  const response = await fetch(oneCallURL, { mode: 'cors' })\n  const data = await response.json()\n\n  return weatherFormatter(data, name)\n}\n\nconst getName = async (search) => {\n  // Google Key\n  const apiKey = 'AIzaSyAzvI9cu1Zk8OegSCLn8Yv0BTagQSWDMFQ'\n  const baseurl = 'https://maps.googleapis.com/maps/api/geocode/json?address='\n  const url =`${baseurl}${search}&key=${apiKey}`\n  \n  const response = await fetch(url, { mode: 'cors' })\n  const data = await response.json()\n\n  return (data.results[0])\n}\n\nconst weatherFormatter = (info, placeName) => {\n  const current = info.current\n\n  const sevenDayForecast = info.daily.map(day => {\n    const dayinfo = {\n      day: weekDay[getDay(day.dt).getDay()],\n      highC: toCelsius(day.temp.max),\n      lowC: toCelsius(day.temp.min),\n      highF: toFahrenheit(day.temp.max),\n      lowF: toFahrenheit(day.temp.min),\n      descrip: day.weather[0].description,\n      iconSrc: getIconURL(day.weather[0].icon, false)\n    }\n    return dayinfo\n  })\n\n  const weatherData = {\n    daily: {\n      location: placeName,\n      time: getDay(current.dt),\n      timeStr: getDay(current.dt).toLocaleTimeString(),\n      day: weekDay[getDay(current.dt).getDay()],\n      tempC: toCelsius(current.temp),\n      tempF: toFahrenheit(current.temp),\n      wind: current.wind_speed,\n      windDir: current.wind_deg,\n      sunrise: getDay(current.sunrise).toLocaleTimeString(),\n      humidity: current.humidity,\n      descrip: current.weather[0].description,\n      iconSrc: getIconURL(current.weather[0].icon)\n    },\n    sevenDay: [...sevenDayForecast]\n  }\n  return weatherData\n}\n\n// HELPER FUNCTIONS\nconst weekDay = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']\nconst toCelsius = (K) => Math.floor(K - 273.15)\nconst toFahrenheit = (K) => Math.floor(toCelsius(K) * (9 / 5) + 32)\nconst getDay = (date) => new Date(date * 1000) // converts unix timestamp to date\n\nconst getIconURL = (iconId, large = true) => { // retrieves appropiate icon url based on weather code from api\n  let url\n  if (large) {\n    url = `http://openweathermap.org/img/wn/${iconId}@4x.png`\n  } else {\n    url = `http://openweathermap.org/img/wn/${iconId}@2x.png`\n  }\n  return url\n}","\nconst DailyForecast = ({isCelsius, info}) => {\n\n  return ( \n  <div>\n    <h1>{info.location}</h1>\n    <h2> {isCelsius ? `${info.tempC}` : `${info.tempF}` }</h2>\n  </div>\n  );\n}\n \n \nexport default DailyForecast;","const OneDayForecast = ({isCelsius, day}) => {\n  return ( \n    <div>\n      <h3>{day.day}</h3>\n      <p>High: {isCelsius ? `${day.highC}` : `${day.highF}` }</p>\n\n      <p>Low: {isCelsius ? `${day.lowC}` : `${day.lowF}` }</p>\n    </div>\n  );\n}\n \nexport default OneDayForecast;","import OneDayForecast from './OneDayForecast'\nimport uniqid from 'uniqid'\nconst WeeklyForecast = ({ isCelsius, weekForecast }) => {\n  return ( \n    <div>\n      {weekForecast.map(weekday => \n      <OneDayForecast \n      key = {uniqid()} \n      day = {weekday}\n      isCelsius = {isCelsius}\n      /> )}\n    </div>\n   );\n}\n \nexport default WeeklyForecast;","import { useState } from \"react\";\nimport DailyForecast from \"./DailyForecast\";\nimport WeeklyForecast from \"./WeeklyForecast\";\nconst Forecast = ({data}) => {\n  const [isCelsius, setisCelsius] = useState(false)\n  return ( \n  <div>\n    <button onClick ={() => setisCelsius(!isCelsius)}>Celsius?</button>\n    <DailyForecast \n    isCelsius = {isCelsius}\n    info = {data.daily}/>\n    <WeeklyForecast \n    isCelsius = {isCelsius}\n    weekForecast = {data.sevenDay}/>\n  </div>\n  );\n}\n \nexport default Forecast;","import React, { useState } from 'react';\n\nconst Header = ({wSearch}) => {\n  const [searchVal, setSearchVal] = useState('')\n  \n  const handleSubmit = (e) => {\n    e.preventDefault()\n    if(searchVal !== ''){\n      wSearch(searchVal)\n      setSearchVal('')\n    }\n  }\n\n  return ( \n    <form onSubmit = { handleSubmit }>\n      <input \n      type=\"text\"\n      value = {searchVal}\n      onChange = {(e) => setSearchVal(e.target.value) }/>\n      <input type=\"submit\" value = 'search' />\n    </form>\n   );\n}\n \nexport default Header;","import { useEffect, useState } from 'react';\nimport { getWeather } from './getWeather'\n\nimport Forecast from \"./Forecast\";\nimport Header from \"./Header\";\n\nfunction App() {\n  const [data, setData] = useState(null)\n  const [pending, setPending] = useState(true)\n  const [error, setError] = useState(null)\n  \n  const weather = async (search) => {\n    setPending(true)\n    setError(null)\n    let wdata\n    try {\n      wdata = await getWeather(search)\n    } catch (error) {\n      setError(error.message)\n      setPending(false)\n      return\n    }\n    setData( await wdata)\n\n    setPending(false)\n  }\n\n  useEffect(()=>{\n    weather('Minneapolis')\n  },[])\n\n\n\n  return (\n    <div className=\"App\">\n      <Header wSearch = {weather}/>\n      {error && <h4>Sorry... No data found, {error}</h4>}\n      {pending && <h2>Loading...</h2>}\n      {!pending && !error && <Forecast data = {data} />}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './Styles/index.sass';\nimport App from './Components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}